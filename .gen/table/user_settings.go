//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var UserSettings = newUserSettingsTable("", "user_settings", "")

type userSettingsTable struct {
	sqlite.Table

	// Columns
	ID             sqlite.ColumnInteger
	ModelSelection sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type UserSettingsTable struct {
	userSettingsTable

	EXCLUDED userSettingsTable
}

// AS creates new UserSettingsTable with assigned alias
func (a UserSettingsTable) AS(alias string) *UserSettingsTable {
	return newUserSettingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UserSettingsTable with assigned schema name
func (a UserSettingsTable) FromSchema(schemaName string) *UserSettingsTable {
	return newUserSettingsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UserSettingsTable with assigned table prefix
func (a UserSettingsTable) WithPrefix(prefix string) *UserSettingsTable {
	return newUserSettingsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UserSettingsTable with assigned table suffix
func (a UserSettingsTable) WithSuffix(suffix string) *UserSettingsTable {
	return newUserSettingsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUserSettingsTable(schemaName, tableName, alias string) *UserSettingsTable {
	return &UserSettingsTable{
		userSettingsTable: newUserSettingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newUserSettingsTableImpl("", "excluded", ""),
	}
}

func newUserSettingsTableImpl(schemaName, tableName, alias string) userSettingsTable {
	var (
		IDColumn             = sqlite.IntegerColumn("id")
		ModelSelectionColumn = sqlite.StringColumn("model_selection")
		allColumns           = sqlite.ColumnList{IDColumn, ModelSelectionColumn}
		mutableColumns       = sqlite.ColumnList{ModelSelectionColumn}
	)

	return userSettingsTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		ModelSelection: ModelSelectionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
